/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.rtrsc.view;

import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.rtrsc.controller.IdController;
import lk.ijse.rtrsc.controller.ManageRouteController;
import lk.ijse.rtrsc.controller.ManageSheetController;
import lk.ijse.rtrsc.controller.ManageStationController;
import lk.ijse.rtrsc.controller.ManageTrainController;
import lk.ijse.rtrsc.dto.DayDto;
import lk.ijse.rtrsc.dto.IdDto;
import lk.ijse.rtrsc.dto.RouteDayDto;
import lk.ijse.rtrsc.dto.RouteDto;
import lk.ijse.rtrsc.dto.StationDto;
import lk.ijse.rtrsc.dto.StationRouteDetailDto;
import lk.ijse.rtrsc.dto.StationRouteDetail_PkDto;
import lk.ijse.rtrsc.dto.TrainDto;
import lk.ijse.rtrsc.observer.Observer;

/**
 *
 * @author Gnanod-PC
 */
public class ManageRoute extends javax.swing.JPanel implements Observer {

    /**
     * Creates new form ManageTrain
     */
    private DefaultTableModel dtmRouteDetail;
    private DefaultTableModel dtmStation;
    String checkTextArea;

    public ManageRoute() {
        initComponents();
        try {
            UnicastRemoteObject.exportObject(this, 0);
            ManageRouteController.getSubject().registerObserver(this);
            ManageStationController.getSubject().registerObserver(this);
            ManageSheetController.getSubject().notifyObservers();
        } catch (Exception ex) {
            Logger.getLogger(ManageTrain.class.getName()).log(Level.SEVERE, null, ex);
        }
        dtmRouteDetail = (DefaultTableModel) tableRouteDetail.getModel();
        dtmStation = (DefaultTableModel) tblStation.getModel();
        getAllStations();
        getAllTrains();
        DayId();
        RouteID();
        txtNameStation.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chkHolydays = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtRouteName = new javax.swing.JTextField();
        txtDayId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtRouteId = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDepatureTime = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        chkMonday = new javax.swing.JCheckBox();
        chkTuesday = new javax.swing.JCheckBox();
        chkWednesday = new javax.swing.JCheckBox();
        chkThursday = new javax.swing.JCheckBox();
        chkFriday = new javax.swing.JCheckBox();
        chkSaturday = new javax.swing.JCheckBox();
        chkSunday = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStation = new javax.swing.JTable();
        txtSearchStation = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtStationId = new javax.swing.JTextField();
        cmbStatus = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableRouteDetail = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtNameStation = new javax.swing.JTextField();
        cmbTrain = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        chkHolydays.setBackground(new java.awt.Color(255, 255, 255));
        chkHolydays.setText("HoliDays");
        chkHolydays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkHolydaysActionPerformed(evt);
            }
        });
        add(chkHolydays, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 140, 90, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(27, 157, 175));
        jLabel2.setText("Route Id");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 160, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(27, 157, 175));
        jLabel4.setText("Route Name");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 160, 30));

        txtRouteName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRouteNameActionPerformed(evt);
            }
        });
        add(txtRouteName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, 390, 30));
        add(txtDayId, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, 390, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(27, 157, 175));
        jLabel5.setText("Train ID");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 150, 40));

        txtRouteId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRouteIdActionPerformed(evt);
            }
        });
        add(txtRouteId, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 390, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(27, 157, 175));
        jLabel6.setText("Status");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 150, 40));
        add(txtDepatureTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, 390, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(27, 157, 175));
        jLabel7.setText("DayId");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 150, 40));

        chkMonday.setBackground(new java.awt.Color(255, 255, 255));
        chkMonday.setText("Monday");
        chkMonday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMondayActionPerformed(evt);
            }
        });
        add(chkMonday, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 90, 70, -1));

        chkTuesday.setBackground(new java.awt.Color(255, 255, 255));
        chkTuesday.setText("Tuesday");
        chkTuesday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTuesdayActionPerformed(evt);
            }
        });
        add(chkTuesday, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 90, 70, -1));

        chkWednesday.setBackground(new java.awt.Color(255, 255, 255));
        chkWednesday.setText("Wednesday");
        chkWednesday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkWednesdayActionPerformed(evt);
            }
        });
        add(chkWednesday, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 90, 90, -1));

        chkThursday.setBackground(new java.awt.Color(255, 255, 255));
        chkThursday.setText("Thursday");
        add(chkThursday, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 140, 70, -1));

        chkFriday.setBackground(new java.awt.Color(255, 255, 255));
        chkFriday.setText("Friday");
        add(chkFriday, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 140, 70, -1));

        chkSaturday.setBackground(new java.awt.Color(255, 255, 255));
        chkSaturday.setText("Saturday");
        chkSaturday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSaturdayActionPerformed(evt);
            }
        });
        add(chkSaturday, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 140, 70, -1));

        chkSunday.setBackground(new java.awt.Color(255, 255, 255));
        chkSunday.setText("Sunday");
        chkSunday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSundayActionPerformed(evt);
            }
        });
        add(chkSunday, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 90, 70, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(27, 157, 175));
        jLabel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Travelling Dates", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(27, 157, 175))); // NOI18N
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 70, 430, 110));

        jButton4.setText("Add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 600, 140, 50));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(27, 157, 175));
        jLabel3.setText("Manage Route");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, 390, 60));

        tblStation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StationId", "StationName"
            }
        ));
        tblStation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStationMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblStation);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 230, 420, 170));
        add(txtSearchStation, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 190, 190, 30));

        jButton1.setText("Search");
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 190, -1, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(27, 157, 175));
        jLabel8.setText("Depature Time");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 150, 40));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(27, 157, 175));
        jLabel10.setText("StationId");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 150, 40));
        add(txtStationId, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 390, 30));

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Start", "Reach", "Stop" }));
        add(cmbStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, 390, 30));

        tableRouteDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RouteId", "StationId", "Status", "StationName"
            }
        ));
        jScrollPane2.setViewportView(tableRouteDetail);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 660, 180));

        jButton5.setText("Add To Table");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 360, 140, 40));

        jButton2.setText("Route Settings");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 600, 110, 40));

        jButton3.setText("Remove");
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 600, 130, 30));
        add(txtNameStation, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 360, 140, -1));

        cmbTrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTrainActionPerformed(evt);
            }
        });
        add(cmbTrain, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 190, 390, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void txtRouteNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRouteNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRouteNameActionPerformed

    private void txtRouteIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRouteIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRouteIdActionPerformed

    private void chkMondayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMondayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkMondayActionPerformed

    private void chkSaturdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSaturdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkSaturdayActionPerformed

    private void chkHolydaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkHolydaysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkHolydaysActionPerformed

    private void chkSundayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSundayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkSundayActionPerformed

    private void chkTuesdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTuesdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkTuesdayActionPerformed

    private void chkWednesdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkWednesdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkWednesdayActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            String trainId = (String) cmbTrain.getSelectedItem();
            String routeName = txtRouteName.getText();
            String routeId = txtRouteId.getText();
            String dayId = txtDayId.getText();
            String depatureTime = txtDepatureTime.getText();
            boolean sunday = false;
            boolean monday = false;
            boolean tuesday = false;
            boolean wednesday = false;
            boolean thursday = false;
            boolean friday = false;
            boolean saturday = false;
            boolean holyDays = false;
            if (chkFriday.isSelected()) {
                friday = true;
            }
            if (chkHolydays.isSelected()) {
                holyDays = true;
            }
            if (chkMonday.isSelected()) {
                monday = true;
            }
            if (chkSaturday.isSelected()) {
                saturday = true;
            }
            if (chkSunday.isSelected()) {
                sunday = true;
            }
            if (chkThursday.isSelected()) {
                thursday = true;
            }
            if (chkTuesday.isSelected()) {
                tuesday = true;
            }
            if (chkWednesday.isSelected()) {
                wednesday = true;
            }
            TrainDto trainDto = new TrainDto();
            trainDto.setTrainId(trainId);
            TrainDto searchTrain = ManageTrainController.searchTrain((String) cmbTrain.getSelectedItem());

            trainDto.setEngineNumber(searchTrain.getEngineNumber());
            trainDto.setFirstClass(searchTrain.isFirstClass());
            trainDto.setFirstClassWagonQty(searchTrain.getFirstClassWagonQty());
            trainDto.setObservationSaloon(searchTrain.isObservationSaloon());
            trainDto.setObservationSaloonWagonQty(searchTrain.getObservationSaloonWagonQty());
            trainDto.setSecondClass(searchTrain.isSecondClass());
            trainDto.setSecondClassWagonQty(searchTrain.getSecondClassWagonQty());
            trainDto.setStatus("NotAvailable");
            trainDto.setThirdClass(searchTrain.isThirdClass());
            trainDto.setThirdClassWagonQty(searchTrain.getThirdClassWagonQty());
            trainDto.setTrainType(searchTrain.getTrainType());
            trainDto.setRouteStatus("NotAvailable");
            DayDto dayDto = new DayDto();
            dayDto.setDateId(dayId);
            dayDto.setFriday(friday);
            dayDto.setMonday(monday);
            dayDto.setSaturday(saturday);
            dayDto.setSunday(sunday);
            dayDto.setThursday(thursday);
            dayDto.setTuesday(tuesday);
            dayDto.setWednesday(wednesday);
            dayDto.setHoliday(holyDays);
            RouteDto routeDto = new RouteDto();
            routeDto.setDepatureTime(depatureTime);
            routeDto.setTrainDto(trainDto);
            routeDto.setRouteId(routeId);
            routeDto.setRouteName(routeName);
            routeDto.setDayDto(dayDto);

            RouteDayDto routeDay = new RouteDayDto();
            routeDay.setDayDto(dayDto);
            routeDay.setTrainDto(trainDto);
            routeDay.setRouteDto(routeDto);
            StationDto stationDto = null;

            List<StationRouteDetailDto> list = new ArrayList<>();
            for (int i = 0; i < dtmRouteDetail.getRowCount(); i++) {
                String tablerouteId = (String) dtmRouteDetail.getValueAt(i, 0);
                stationDto = new StationDto();
                String tableStationId = (String) dtmRouteDetail.getValueAt(i, 1);
                String stationName = (String) dtmRouteDetail.getValueAt(i, 3);
                stationDto.setStationId(tableStationId);
                stationDto.setStationName(stationName);
                String status = (String) dtmRouteDetail.getValueAt(i, 2);
                StationRouteDetailDto stationRoute = new StationRouteDetailDto();
                stationRoute.setStationEntity(stationDto);
                stationRoute.setRoute(routeDto);
                stationRoute.setStationStatus(status);
                stationRoute.setStationRouteDetail_PkDto(new StationRouteDetail_PkDto(stationDto.getStationId(), routeDto.getRouteId()));
                list.add(stationRoute);
            }
            routeDay.setStationDto(stationDto);
            routeDay.setList(list);
            boolean isAdded = ManageRouteController.addRouteDay(routeDay);

            if (isAdded) {
                JOptionPane.showMessageDialog(this, "Added SuccessFully");
            } else {
                JOptionPane.showMessageDialog(this, "Added Fail");
            }
        } catch (Exception ex) {
            Logger.getLogger(ManageRoute.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void tblStationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStationMouseClicked
        String stationId = tblStation.getValueAt(tblStation.getSelectedRow(), 0).toString();
        String stationName = tblStation.getValueAt(tblStation.getSelectedRow(), 1).toString();
        txtStationId.setText(stationId);
        txtNameStation.setText(stationName);
    }//GEN-LAST:event_tblStationMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            String routeId = txtRouteId.getText();
            String stationId = txtStationId.getText();
            String status = (String) cmbStatus.getSelectedItem();
            String stationName = txtNameStation.getText();
            List<TrainDto> trainDto = ManageTrainController.getAllTrains();
            //    String statusRoute = null;
            Object[] ob = {routeId, stationId, status, stationName};
            dtmRouteDetail.addRow(ob);

        } catch (Exception ex) {
            Logger.getLogger(ManageRoute.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        RouteSettingss route = new RouteSettingss(null, true);
        route.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cmbTrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTrainActionPerformed
        try {
            String name = (String) cmbTrain.getSelectedItem();
            int count = ManageTrainController.getRouteCount(name);
            System.out.println("count"+count);
        } catch (Exception ex) {
            Logger.getLogger(ManageRoute.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbTrainActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkFriday;
    private javax.swing.JCheckBox chkHolydays;
    private javax.swing.JCheckBox chkMonday;
    private javax.swing.JCheckBox chkSaturday;
    private javax.swing.JCheckBox chkSunday;
    private javax.swing.JCheckBox chkThursday;
    private javax.swing.JCheckBox chkTuesday;
    private javax.swing.JCheckBox chkWednesday;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JComboBox<String> cmbTrain;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableRouteDetail;
    private javax.swing.JTable tblStation;
    private javax.swing.JTextField txtDayId;
    private javax.swing.JTextField txtDepatureTime;
    private javax.swing.JTextField txtNameStation;
    private javax.swing.JTextField txtRouteId;
    private javax.swing.JTextField txtRouteName;
    private javax.swing.JTextField txtSearchStation;
    private javax.swing.JTextField txtStationId;
    // End of variables declaration//GEN-END:variables
     private void getAllStations() {
        try {
            List<StationDto> stationDto = ManageStationController.getAllStation();
            dtmStation.setRowCount(0);
            if (stationDto != null) {
                for (StationDto station : stationDto) {
                    Object[] ob = {station.getStationId(), station.getStationName()};
                    dtmStation.addRow(ob);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ManagePrices.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void updateObservers() throws Exception {
        getAllStations();
        getAllTrains();
        DayId();
        RouteID();
    }
    
    public void RouteID(){

        IdDto idDTO=new IdDto("routeentity", "routeId");
        try {
            String id=IdController.getNewID(idDTO, "R");
            txtRouteId.setText(id);
        } catch (Exception ex) {
            Logger.getLogger(ManageTrain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void getAllTrains() {
        try {
            List<TrainDto> trainDto = ManageTrainController.getAllTrains();
            //dtm.setRowCount(0);

            if (trainDto != null) {

                for (TrainDto train : trainDto) {

                    for (TrainDto trainDto1 : trainDto) {
                        if (trainDto1.getRouteStatus().equals("NotAvailable")) {
                            return;
                        }
                        if (trainDto1.getRouteStatus().equals("Available")) {

                            cmbTrain.addItem(trainDto1.getTrainId());
                        }
                    }

                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ManageTrain.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void DayId() {
         IdDto idDTO=new IdDto("dayentity", "dateId");
        try {
            String id=IdController.getNewID(idDTO, "D");
            txtDayId.setText(id);
        } catch (Exception ex) {
            Logger.getLogger(ManageTrain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
