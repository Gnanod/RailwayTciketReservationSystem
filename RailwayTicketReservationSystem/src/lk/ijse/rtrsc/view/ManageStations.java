/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.rtrsc.view;

import java.rmi.server.UnicastRemoteObject;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.rtrsc.controller.IdController;
import lk.ijse.rtrsc.controller.ManageRouteController;
import lk.ijse.rtrsc.controller.ManageSheetController;
import lk.ijse.rtrsc.controller.ManageStationController;
import lk.ijse.rtrsc.dto.DayDto;
import lk.ijse.rtrsc.dto.IdDto;
import lk.ijse.rtrsc.dto.RouteDayDto;
import lk.ijse.rtrsc.dto.RouteDto;
import lk.ijse.rtrsc.dto.SheetDto;
import lk.ijse.rtrsc.dto.StationDto;
import lk.ijse.rtrsc.dto.TrainDto;
import lk.ijse.rtrsc.observer.Observer;

/**
 *
 * @author Gnanod-PC
 */
public class ManageStations extends javax.swing.JPanel implements Observer{

    /**
     * Creates new form ManageTrain
     */
    String checkTextArea;
    private DefaultTableModel dtmStation;

    public ManageStations() {
        initComponents();
        dtmStation = (DefaultTableModel) tblStation.getModel();
        
        
         try {
            UnicastRemoteObject.exportObject(this, 0);
            ManageStationController.getSubject().registerObserver(this);
        } catch (Exception ex) {
            Logger.getLogger(ManageTrain.class.getName()).log(Level.SEVERE, null, ex);
        }
         getAllStations();
         loadId();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cyties = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtStationName = new javax.swing.JTextField();
        txtStationId = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStation = new javax.swing.JTable();
        btnSave1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(27, 157, 175));
        jLabel2.setText("Station Id");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 160, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(27, 157, 175));
        jLabel4.setText("Station Name");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 160, 30));

        txtStationName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStationNameActionPerformed(evt);
            }
        });
        add(txtStationName, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, 390, 40));

        txtStationId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStationIdActionPerformed(evt);
            }
        });
        add(txtStationId, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 390, 40));

        btnSave.setText("Add");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, 130, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(27, 157, 175));
        jLabel3.setText("Manage Stations");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, 390, 60));

        tblStation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StationId", "StationName"
            }
        ));
        tblStation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStationMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblStation);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 340, 500, 230));

        btnSave1.setText("Update");
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });
        add(btnSave1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 270, 130, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void txtStationNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStationNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStationNameActionPerformed

    private void txtStationIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStationIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStationIdActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            String stationId = txtStationId.getText();
            String stationName = txtStationName.getText();
            boolean mathara = false;
            boolean colombo = false;
            boolean kandy = false;
//            if(btnMathara.isSelected()){
//                mathara= true;
//            }
//            if(btnColombo.isSelected()){
//                colombo=true;
//            }
//            if(btnKandy.isSelected()){
//                kandy=true;
//            }

            StationDto stationDto = new StationDto(stationId, stationName, mathara, colombo, kandy);
            boolean isSelected = ManageStationController.addStation(stationDto);
            if (isSelected) {
                JOptionPane.showMessageDialog(this, "Added Successfully");
            } else {
                JOptionPane.showMessageDialog(this, "Added Fail");
            }
        } catch (Exception ex) {
            Logger.getLogger(ManageStations.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        try {
            String stationId = txtStationId.getText();
            String stationName = txtStationName.getText();
            
            StationDto  station = new StationDto(stationId, stationName);
            boolean isUpdated = ManageStationController.updateStation(station);
            if(isUpdated){
                JOptionPane.showMessageDialog(this,"Updated SuccessFully");
            }else{
                JOptionPane.showMessageDialog(this,"Updated Fail");
            }
        } catch (Exception ex) {
            Logger.getLogger(ManageStations.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSave1ActionPerformed

    private void tblStationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStationMouseClicked
        String stationId = tblStation.getValueAt(tblStation.getSelectedRow(), 0).toString();
        String stationName = tblStation.getValueAt(tblStation.getSelectedRow(), 1).toString();
        txtStationId.setText(stationId);
        txtStationName.setText(stationName);
    }//GEN-LAST:event_tblStationMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSave1;
    private javax.swing.ButtonGroup cyties;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblStation;
    private javax.swing.JTextField txtStationId;
    private javax.swing.JTextField txtStationName;
    // End of variables declaration//GEN-END:variables

    private void getAllStations() {
        try {
            List<StationDto> stationDto = ManageStationController.getAllStation();
            dtmStation.setRowCount(0);
            if (stationDto != null) {
                for (StationDto station : stationDto) {
                    Object[] ob = {station.getStationId(), station.getStationName()};
                    dtmStation.addRow(ob);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ManagePrices.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void updateObservers() throws Exception {
        getAllStations();
        loadId();
    }
    
    public void loadId(){

        IdDto idDTO=new IdDto("stationentity", "stationId");
        try {
            String id=IdController.getNewID(idDTO, "S");
            txtStationId.setText(id);
        } catch (Exception ex) {
            Logger.getLogger(ManageTrain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
