/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.rtrsc.view;

import java.rmi.server.UnicastRemoteObject;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.rtrsc.controller.ManageTrainController;
import lk.ijse.rtrsc.controller.ManageWagonController;
import lk.ijse.rtrsc.dto.ViewWagonDto;
import lk.ijse.rtrsc.dto.WagonDto;
import lk.ijse.rtrsc.observer.Observer;

/**
 *
 * @author Gnanod-PC
 */
public class WagonSettings extends javax.swing.JDialog implements Observer{

    /**
     * Creates new form WagonSettings
     */
    private DefaultTableModel dtmWagonDetail;

    public WagonSettings(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        dtmWagonDetail = (DefaultTableModel) tblWagon.getModel();
        getWagonDetails();
        try {
            UnicastRemoteObject.exportObject(this, 0);
            ManageWagonController.getSubject().registerObserver(this);
           // ManageTrainController.getSubject().registerObserver(this);
           // ManageTrainController.getSubject().notifyObservers();
            ManageWagonController.getSubject().notifyObservers();
        } catch (Exception ex) {
            Logger.getLogger(ManageTrain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        txtSearchWagonId = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblWagon = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtSheetQty = new javax.swing.JTextField();
        txtTrainId = new javax.swing.JTextField();
        txtWagonId = new javax.swing.JTextField();
        btnObservation = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        btnFirst = new javax.swing.JRadioButton();
        btnSecond = new javax.swing.JRadioButton();
        btnThird = new javax.swing.JRadioButton();
        btnUpdate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtSearchWagonId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtSearchWagonId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchWagonIdActionPerformed(evt);
            }
        });
        txtSearchWagonId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchWagonIdKeyPressed(evt);
            }
        });
        getContentPane().add(txtSearchWagonId, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 400, 30));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(27, 157, 175));
        jLabel10.setText("          WagonId");
        jLabel10.setToolTipText("");
        jLabel10.setOpaque(true);
        jLabel10.setRequestFocusEnabled(false);
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, 160, 30));

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 30, 90, 30));

        tblWagon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Select", "WagonId", "TrainId", "ClassType", "SheetQuantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblWagon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblWagonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblWagon);
        if (tblWagon.getColumnModel().getColumnCount() > 0) {
            tblWagon.getColumnModel().getColumn(0).setMinWidth(50);
            tblWagon.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 90, 780, 180));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 490, 120, 40));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(27, 157, 175));
        jLabel12.setText("TrainId");
        jLabel12.setToolTipText("");
        jLabel12.setOpaque(true);
        jLabel12.setRequestFocusEnabled(false);
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, 160, 30));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(27, 157, 175));
        jLabel11.setText("          ClassType");
        jLabel11.setToolTipText("");
        jLabel11.setOpaque(true);
        jLabel11.setRequestFocusEnabled(false);
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 420, 160, 30));
        getContentPane().add(txtSheetQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 380, 300, 30));
        getContentPane().add(txtTrainId, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 300, 300, 30));
        getContentPane().add(txtWagonId, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, 300, 30));

        btnObservation.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(btnObservation);
        btnObservation.setText("Observation Saloon");
        getContentPane().add(btnObservation, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 430, 140, -1));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(27, 157, 175));
        jLabel13.setText("          SheetQty");
        jLabel13.setToolTipText("");
        jLabel13.setOpaque(true);
        jLabel13.setRequestFocusEnabled(false);
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 380, 160, 30));

        btnFirst.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(btnFirst);
        btnFirst.setText("FirstClass");
        getContentPane().add(btnFirst, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 430, -1, -1));

        btnSecond.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(btnSecond);
        btnSecond.setText("SecondClass");
        getContentPane().add(btnSecond, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 430, -1, -1));

        btnThird.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(btnThird);
        btnThird.setText("ThirdClass");
        getContentPane().add(btnThird, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 430, -1, -1));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 490, 120, 40));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 570));

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(27, 157, 175));
        jLabel14.setText("          ClassType");
        jLabel14.setToolTipText("");
        jLabel14.setOpaque(true);
        jLabel14.setRequestFocusEnabled(false);
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 420, 160, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchWagonIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchWagonIdActionPerformed

    }//GEN-LAST:event_txtSearchWagonIdActionPerformed

    private void txtSearchWagonIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchWagonIdKeyPressed

    }//GEN-LAST:event_txtSearchWagonIdKeyPressed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            String wagonId = tblWagon.getValueAt(tblWagon.getSelectedRow(), 1).toString();

            boolean isDeleted = ManageWagonController.deleteWagon(wagonId);
            if (isDeleted) {
                JOptionPane.showMessageDialog(this, "Deleted SuccessFully");

            } else {
                JOptionPane.showMessageDialog(this, "Deleted Fail");
            }
        } catch (Exception ex) {
            Logger.getLogger(ManageTrain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            String wagonId = txtWagonId.getText();
            String trainId = txtTrainId.getText();
            String sheetQty = txtSheetQty.getText();

            String classType = tblWagon.getValueAt(tblWagon.getSelectedRow(), 4).toString();
            System.out.println("classType" + classType);
            if (classType.equals("FirstClass")) {
                btnFirst.isSelected();
            }
            if (classType.equals("SecondClass")) {
                btnSecond.isSelected();
            }
            if (classType.equals("ThirdClass")) {
                btnThird.isSelected();
            }
            if (classType.equals("ObservationSaloon")) {
                btnObservation.isSelected();
            }

            WagonDto wagon = new WagonDto();
            wagon.setClassType(classType);
            wagon.setSheetQuantity(Integer.parseInt(sheetQty));
            wagon.setWagonId(wagonId);
            boolean isUpdated = ManageWagonController.updateWagon(wagon);
            if (isUpdated) {
                JOptionPane.showMessageDialog(this, "Updated Successfully");
            } else {
                JOptionPane.showMessageDialog(this, "Updated Fail");
            }
        } catch (Exception ex) {
            Logger.getLogger(WagonSettings.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblWagonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblWagonMouseClicked

        String wagonId = tblWagon.getValueAt(tblWagon.getSelectedRow(), 1).toString();
        String trainId = tblWagon.getValueAt(tblWagon.getSelectedRow(), 2).toString();
        String sheetQty = tblWagon.getValueAt(tblWagon.getSelectedRow(), 4).toString();
        String classType = tblWagon.getValueAt(tblWagon.getSelectedRow(), 3).toString();

        if (classType.equals("FirstClass")) {
            btnFirst.setSelected(true);
        }
        if (classType.equals("SecondClass")) {
            btnSecond.setSelected(true);
        }
        if (classType.equals("ThirdClass")) {
            btnThird.setSelected(true);
        }
        if (classType.equals("ObservationSaloon")) {
            btnObservation.setSelected(true);
        }
        txtWagonId.setText(wagonId);
        txtTrainId.setText(trainId);
        txtSheetQty.setText(sheetQty);

    }//GEN-LAST:event_tblWagonMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String wagon = txtSearchWagonId.getText();
        try {
            List<ViewWagonDto> list = ManageWagonController.searchWagon(wagon);
            dtmWagonDetail.setRowCount(0);
            System.out.println("listttttt"+list);
            if (list != null) {
                for (ViewWagonDto viewWagonDto : list) {
                    Object[] ob = {false, viewWagonDto.getWagonId(), viewWagonDto.getTrainId(), viewWagonDto.getClassType(), viewWagonDto.getSheetQty()};
                    dtmWagonDetail.addRow(ob);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(WagonSettings.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WagonSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WagonSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WagonSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WagonSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                WagonSettings dialog = new WagonSettings(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JRadioButton btnFirst;
    private javax.swing.JRadioButton btnObservation;
    private javax.swing.JRadioButton btnSecond;
    private javax.swing.JRadioButton btnThird;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblWagon;
    private javax.swing.JTextField txtSearchWagonId;
    private javax.swing.JTextField txtSheetQty;
    private javax.swing.JTextField txtTrainId;
    private javax.swing.JTextField txtWagonId;
    // End of variables declaration//GEN-END:variables

    private void getWagonDetails() {
        try {
            List<ViewWagonDto> list = ManageWagonController.ViewAllWagons();
            dtmWagonDetail.setRowCount(0);
            if (list != null) {
                for (ViewWagonDto viewWagonDto : list) {
                    Object[] ob = {false, viewWagonDto.getWagonId(), viewWagonDto.getTrainId(), viewWagonDto.getClassType(), viewWagonDto.getSheetQty()};
                    dtmWagonDetail.addRow(ob);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(WagonSettings.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void updateObservers() throws Exception {
         getWagonDetails() ;
    }
}
